@model MySeenWeb.Models.ShareViewModels.ShareViewModelBooksMin

<br/>

<div id="divDataBooksShared">

    <div data-bind="visible: dataLoading " align="center">
        <img src="~/Content/Images/loading_small.gif"/>
    </div>

    <div data-bind="visible: books().length > 0" style="display: none;">

        <div class="table-responsive">
            <table class="table table-striped" id="table">
                <thead>
                <tr>
                    <th class="col-sm-5">@Resource.Name</th>
                    <th class="col-sm-1">@Resource.Year</th>
                    <th class="col-sm-2">@Resource.Author</th>
                    <th class="col-sm-2">@Resource.DateRead</th>
                    <th class="col-sm-1">@Resource.Genre</th>
                    <th class="col-sm-1">@Resource.Rating</th>
                </tr>
                </thead>
                <tbody data-bind="foreach: books">
                <tr>
                    <td class="align-center" data-bind="text: name"></td>
                    <td class="align-center" data-bind="text: year"></td>
                    <td class="align-center" data-bind="text: authors"></td>
                    <td class="align-center" data-bind="text: dateRead"></td>
                    <td class="align-center" data-bind="text: genre"></td>
                    <td class="align-center" data-bind="text: rating"></td>
                </tr>
                </tbody>
            </table>
        </div>

        @Html.Partial("../Tools/PaginationKO")

    </div>

    @Html.Partial("Tools/Services", Model)

    @Html.Partial("Tools/GetPage")
</div>

<script language="javascript" type="text/javascript">

    function Book(data) {

        this.name = ko.observable(data.Name);
        this.year = ko.observable(data.YearText);
        this.authors = ko.observable(data.Authors);
        this.dateRead = ko.observable(data.DateReadText);
        this.genre = ko.observable(data.GenreText);
        this.rating = ko.observable(data.RatingText);
    }

    function BooksViewModel() {

        var self = this;
        self.books = ko.observableArray([]);
        self.dataLoading = ko.observable();
        self.dataLoading(true);

        self.loadData = function (data) {

            var mapped = $.map(data.Data, function (item) { return new Book(item) });
            if (self.books().length > 0) {
                self.books.push.apply(self.books, mapped);
            } else {
                self.books(mapped);
            }

            window.showPagination(data.Pages);

            self.dataLoading(false);
        };

        self.resetData = function () {
            self.books.removeAll();
        };

        self.setLoadingData = function () {
            self.dataLoading(true);
        };
    }

    var model;

    function showPage(data) {

        model.loadData(data);
    }

    (function ($) {
        $(function () {

            model = new BooksViewModel();
            ko.applyBindings(model, document.getElementById('divDataBooksShared'));


            window.sharedKey = '@Model.Key';
            window.sharedPageName = 'books';

            window.getPage(); //Запрос на сервер

        });
    })(jQuery);
</script>