@model MySeenWeb.Models.HomeViewModelBooksMin

@Scripts.Render("~/bundles/datetimepicker")
@Styles.Render("~/Content/datetimepicker.css")

<br />

<div id="divDataBooks">
    <div data-bind="visible: dataLoading " align="center">
        <img src="~/Content/Images/loading_small.gif"/>
    </div>

    <div data-bind="visible: books().length > 0" style="display: none;">

        <div class="table-responsive">
            <table class="table table-striped" id="table">
                <thead>
                <tr>
                    <th class="col-sm-1"></th>
                    <th class="col-sm-4">@Resource.Name</th>
                    <th class="col-sm-1">@Resource.Year</th>
                    <th class="col-sm-2">@Resource.Author</th>
                    <th class="col-sm-2">@Resource.DateRead</th>
                    <th class="col-sm-1">@Resource.Genre</th>
                    <th class="col-sm-1">@Resource.Rating</th>
                </tr>
                </thead>
                <tbody data-bind="foreach: books">
                <tr>
                    <td>
                        <span class="pull-left">
                            <button class="btn btn-warning btn-edit btn-xs" data-bind="attr: {id: id}"> <span class=" glyphicon glyphicon-pencil"></span></button>
                            <button class="btn btn-xs btn-info btn-share" data-bind=" visible: shared, attr: {id: id}"><span class="glyphicon glyphicon-share"></span></button>
                        </span>
                    </td>
                    <td class="align-center" data-bind="text: name"></td>
                    <td class="align-center" data-bind="text: year"></td>
                    <td class="align-center" data-bind="text: authors"></td>
                    <td class="align-center" data-bind="text: dateRead"></td>
                    <td class="align-center" data-bind="text: genre"></td>
                    <td class="align-center" data-bind="text: rating"></td>
                </tr>
                </tbody>
            </table>
        </div>

        @Html.Partial("../Tools/PaginationKO")

    </div>

    @Html.Partial("Parts/Tools/JsonGetPage")
</div>

<div class="modal fade modal-window" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" id="ModalAddWindow">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close myseen-modal-close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title text-center">@Resource.AddNew @Resource.Book</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="bookName" class="col-sm-2 control-label">@Resource.Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control movie-name" id="bookName" placeholder="@Resource.Name">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="bookYear" class="col-sm-2 control-label">@Resource.Year</label>
                        <div class="col-sm-10">
                            <input type="number" min="1900" max="@(DateTime.Now.Year)" class="form-control movie-year" id="bookYear" placeholder="@Resource.Year" value="@(DateTime.Now.Year)">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="bookAuthor" class="col-sm-2 control-label">@Resource.Author</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="bookAuthor" placeholder="@Resource.Author">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="datetimepicker" class="col-sm-2 control-label">@Resource.When</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="datetimepicker" placeholder="@DateTime.Now" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">@Resource.Genre</label>
                        <div class="col-sm-10">
                            @Html.DropDownList("Genre", Model.RatinngGenre.GenreList, new { @class = "form-control movie-genre", @id = "bookGenre" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">@Resource.Rating</label>
                        <div class="col-sm-10">
                            @Html.DropDownList("Rating", Model.RatinngGenre.RatingList, new { @class = "form-control movie-rating", @id = "bookRating" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="align-center row">
                    <button type="button" class="btn btn-info btn-share" id="shareGetInModalButton">
                        <span class="glyphicon glyphicon-plus"></span>
                        &nbsp;@Resource.Share
                    </button>
                    <button type="button" class="btn btn-danger" id="deleteButton" style="display: none;">
                        <span class="glyphicon glyphicon-trash"></span>
                        &nbsp;@Resource.Delete
                    </button>
                    <button type="button" class="btn btn-success" id="saveButton" style="display: none;">
                        <span class="glyphicon glyphicon-ok"></span>
                        &nbsp;@Resource.SaveСhanges
                    </button>
                </div>
                <button type="button" class="btn btn-success btn-block" id="submitAddButton">
                    <span class="glyphicon glyphicon-ok"></span>
                    &nbsp;@Resource.Add
                </button>
            </div>
        </div>
    </div>
</div>

@Html.Partial("Parts/Parts/ModalShare", "books")

<script language="javascript" type="text/javascript">

function Book(data) {

    this.id = ko.observable(data.Id);
    this.shared = ko.observable(data.Shared);
    this.name = ko.observable(data.Name);
    this.year = ko.observable(data.YearText);
    this.authors = ko.observable(data.Authors);
    this.dateRead = ko.observable(data.DateReadText);
    this.genre = ko.observable(data.GenreText);
    this.rating = ko.observable(data.RatingText);
}

    function BooksViewModel() {

            var self = this;
            self.books = ko.observableArray([]);
            self.dataLoading = ko.observable();
            self.dataLoading(true);

            self.loadData = function (data) {

                var mapped = $.map(data.Data, function (item) { return new Book(item) });
                if (self.books().length > 0) {
                    self.books.push.apply(self.books, mapped);
                } else {
                    self.books(mapped);
                }

                window.showPagination(data.Pages);

                self.dataLoading(false);
            };

            self.resetData = function () {
                self.books.removeAll();
            };

            self.setLoadingData = function () {
                self.dataLoading(true);
            };
        }

        var model;

        function showPage(data) {

            model.loadData(data);
        }

(function($) {
    $(function() {

        model = new BooksViewModel();
        ko.applyBindings(model, document.getElementById('divDataBooks'));

        window.getPage({ page: window.getQueryVar('page'), search: window.getQueryVar('search') }); //Запрос на сервер

        var $addButton = $('#addButton');
        var $submitAddButton = $('#submitAddButton');
        var $table = $('.table.table-striped');
        var $modal = $('#ModalAddWindow');
        var url = '';
        var data = {};
        var $datetimepicker = $('#datetimepicker');
        $datetimepicker.datetimepicker({
            //viewMode: 'years',
            locale: '@CultureInfoTool.GetCulture()'
        });
        var $shareGetInModalButton = $('#shareGetInModalButton');
        var $bookYear = $('#bookYear');
        $bookYear.on('input', function() {
            if (this.value.length > 4) this.value = this.value.slice(0, 4);
            return false;
        });

        function sendRequest(innerUrl, innerData) {
            $.ajax({
                type: 'POST',
                url: innerUrl,
                data: innerData,
                dataType: 'json',
                success: function(response) {
                    if (response.error) {
                        alert(response.error);
                    } else {
                        //window.location.href = window.location.href;
                        var data = { page: $('#pagination-curent-page').val(), search: $('#quickSearch').val() };
                        window.getPage(data); //Запрос на сервер

                        $modal.modal('hide');
                    }
                },
                error: function(err) {
                    alert(err);
                }
            });

            return false;
        }

        $addButton.off('click');
        $addButton.on('click', function() {
            $datetimepicker.val('@DateTime.Now');
            $shareGetInModalButton.hide();
            $modal.modal('show');
            return false;
        });

        $submitAddButton.off('click');
        $submitAddButton.on('click', function() {

            url = '/Home/AddBook';
            data = {
                name: $('#bookName').val(),
                year: $('#bookYear').val(),
                authors: $('#bookAuthor').val(),
                datetime: $('#datetimepicker').val(),
                genre: $('#bookGenre').val(),
                rating: $('#bookRating').val()
            };

            sendRequest(url, data);

            return false;
        });

        $table.off('click', '.btn-edit');
        $table.on('click', '.btn-edit', function() {
            $shareGetInModalButton.show();
            var $button = $(this);
            var $tr = $button.parent().parent().parent();
            var $tds = $tr.find('td');
            var $modalTitle = $modal.find('.modal-title');
            var $modalBody = $modal.find('.modal-body');
            var $movieName = $modalBody.find('.movie-name');
            var $movieYear = $modalBody.find('.movie-year');
            var $movieGenre = $modalBody.find('.movie-genre');
            var $movieRating = $modalBody.find('.movie-rating');
            var $bookAuthors = $('#bookAuthor');
            var $saveButton = $('#saveButton');
            var $deleteButton = $('#deleteButton');
            var defaultModalTitle = $modalTitle.text();
            var defaultModalGenre = $movieGenre.find('option:selected').text();
            var defaultModalRating = $movieRating.find('option:selected').text();
            var id = $button.attr('id');
            var name = $tds.eq(1).text();
            var year = $tds.eq(2).text();
            var authors = $tds.eq(3).text();
            var date = $tds.eq(4).text();
            var genre = $tds.eq(-2).text();
            var rating = $tds.eq(-1).text();
            $shareGetInModalButton.off('click');
            $shareGetInModalButton.on('click', function() {
                window.modalShareWork(id);
                $modal.modal('hide');
                return false;
            });
            $movieName.val(name);
            $movieYear.val(year);
            $bookAuthors.val(authors);
            $datetimepicker.val(date);

            $movieGenre.find('option')
                .filter(function() {
                    return $(this).text() === genre;
                })
                .prop('selected', true);
            $movieRating.find('option')
                .filter(function() {
                    return $(this).text() === rating;
                })
                .prop('selected', true);

            $modalTitle.text('@Resource.Edit @Resource.Book');

            $submitAddButton.hide();
            $saveButton.show();
            $deleteButton.show();
            $modal.modal('show');

            $modal.on('hidden.bs.modal', function() {
                $modalTitle.text(defaultModalTitle);
                $movieName.val('');
                $movieYear.val('');
                $bookAuthors.val('');
                $movieGenre.find('option')
                    .filter(function() {
                        return $(this).text() === defaultModalGenre;
                    })
                    .prop('selected', true);
                $movieRating.find('option')
                    .filter(function() {
                        return $(this).text() === defaultModalRating;
                    })
                    .prop('selected', true);
                $saveButton.hide();
                $deleteButton.hide();
                $submitAddButton.show();

                return false;
            });

            $saveButton.off('click');
            $saveButton.on('click', function() {

                url = '/Home/EditBook';
                data = {
                    id: id,
                    name: $('#bookName').val(),
                    year: $('#bookYear').val(),
                    authors: $('#bookAuthor').val(),
                    datetime: $('#datetimepicker').val(),
                    genre: $('#bookGenre').val(),
                    rating: $('#bookRating').val()
                };

                sendRequest(url, data);
                return false;
            });

            $deleteButton.off('click');
            $deleteButton.on('click', function() {

                url = '/Home/DeleteBook';
                data = {
                    id: id
                };

                sendRequest(url, data);
                return false;
            });
            return false;
        });
    });
})(jQuery);
</script>
