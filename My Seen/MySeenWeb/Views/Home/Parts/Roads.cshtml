@model MySeenWeb.Models.HomeViewModelRoadsMin

<br />

@Scripts.Render("~/bundles/gmap3", "~/bundles/myseen.gmap")
@Scripts.Render("~/bundles/datetimepicker")
@Styles.Render("~/Content/datetimepicker.css")

<!-- надо геометрия для расчета расстояний и путей <script type="text/javascript" src="http://maps.google.com/maps/api/js"></script>-->
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=geometry&amp;language=@CultureInfoTool.GetCulture()"></script>

<div id="divDataRoads">

    <div data-bind="visible: dataLoading " align="center">
        <img src="~/Content/Images/loading_small.gif"/>
    </div>

    <div class="row">
        <div class="panel panel-primary col-md-3">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @Resource.Tracks
                    <span class="alert-info small">
                        <select class="input-sm" id="lstYears" data-bind="options: yearsList, optionsText: 'text', optionsValue: 'value', value: selectedYear"></select>
                    </span>
                    <span class="pull-right alert-info small">
                        <button class="btn btn-xs btn-info btn-share" id="All"><small><span class="glyphicon glyphicon-share"></span></small></button>
                    </span>
                </div>
                <ul class="nav nav-tabs">
                    <li data-bind="visible: haveFoot, css: { active: mainTabFoot}"><a data-toggle="tab" href="#menu1">@Resource.Foot</a></li>
                    <li data-bind="visible: haveBike, css: { active: mainTabBike}"><a data-toggle="tab" href="#menu2">@Resource.Bike</a></li>
                    <li data-bind="visible: haveCar, css: { active: mainTabCar}"><a data-toggle="tab" href="#menu3">@Resource.Car</a></li>
                </ul>
                <div class="tab-content page-size-gmap page-scrolable">
                    <div id="menu1" class="list-group tab-pane fade" data-bind="foreach: dataFoot, css: { active: mainTabFoot, in: mainTabFoot}">
                        <a href="" class="list-group-item track-id" data-bind="attr: {id: id}">
                            <h5 class="list-group-item-heading" data-bind="css: {alignCenter: id() < 0}">
                                <span data-bind="text: name"></span>
                                <span class="badge pull-right" data-bind="text: date"></span>
                            </h5>
                            <h6 class="list-group-item-text align-center">@Resource.Distance :<span class="badge pull-right alert-info small" data-bind="text: distance"></span></h6>
                            <h6 class="list-group-item-text align-left">
                                @Resource.Actions :
                                <span class="pull-right alert-info small">
                                    <button class="btn btn-xs btn-info btn-share" data-bind="visible: shared, attr: {id: id}"><small><span class="glyphicon glyphicon-share"></span></small></button>
                                    <button class="btn btn-xs btn-warning btn-edit" data-bind="visible: id() > 0, attr: {id: id}"><small><span class=" glyphicon glyphicon-pencil"></span></small></button>
                                </span>
                            </h6>
                        </a>
                    </div>
                    <div id="menu2" class="list-group tab-pane fade" data-bind="foreach: dataBike, css: { active: mainTabBike, in: mainTabBike}">
                        <a href="" class="list-group-item track-id" data-bind="attr: {id: id}">
                            <h5 class="list-group-item-heading" data-bind="css: {alignCenter: id() < 0}">
                                <span data-bind="text: name"></span>
                                <span class="badge pull-right" data-bind="text: date"></span>
                            </h5>
                            <h6 class="list-group-item-text align-center">@Resource.Distance :<span class="badge pull-right alert-info small" data-bind="text: distance"></span></h6>
                            <h6 class="list-group-item-text align-left">
                                @Resource.Actions :
                                <span class="pull-right alert-info small">
                                    <button class="btn btn-xs btn-info btn-share" data-bind="visible: shared, attr: {id: id}"><small><span class="glyphicon glyphicon-share"></span></small></button>
                                    <button class="btn btn-xs btn-warning btn-edit" data-bind="visible: id() > 0, attr: {id: id}"><small><span class=" glyphicon glyphicon-pencil"></span></small></button>
                                </span>
                            </h6>
                        </a>
                    </div>
                    <div id="menu3" class="list-group tab-pane fade" data-bind="foreach: dataCar, css: { active: mainTabCar, in: mainTabCar}">
                        <a href="" class="list-group-item track-id" data-bind="attr: {id: id}">
                            <h5 class="list-group-item-heading" data-bind="css: {alignCenter: id() < 0}">
                                <span data-bind="text: name"></span>
                                <span class="badge pull-right" data-bind="text: date"></span>
                            </h5>
                            <h6 class="list-group-item-text align-center">@Resource.Distance :<span class="badge pull-right alert-info small" data-bind="text: distance"></span></h6>
                            <h6 class="list-group-item-text align-left">
                                @Resource.Actions :
                                <span class="pull-right alert-info small">
                                    <button class="btn btn-xs btn-info btn-share" data-bind="visible: shared, attr: {id: id}"><small><span class="glyphicon glyphicon-share"></span></small></button>
                                    <button class="btn btn-xs btn-warning btn-edit" data-bind="visible: id() > 0, attr: {id: id}"><small><span class=" glyphicon glyphicon-pencil"></span></small></button>
                                </span>
                            </h6>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary col-md-9">
            <div class="panel panel-default">
                <div class="panel-heading">@Resource.Map</div>
                <div id="my_map" class="gmap page-size-gmap"></div>
            </div>
        </div>
    </div>

    @Html.Partial("Parts/Parts/TracksModalAddEdit", Model.TypeList)

    @Html.Partial("Parts/Parts/ModalShare", "roads")

    @Html.Partial("Parts/Tools/JsonGetPage")
</div>

<script language="javascript" type="text/javascript">
    function Road(data) {

        this.id = ko.observable(data.Id);
        this.name = ko.observable(data.Name);
        this.date = ko.observable(data.DateText);
        this.distance = ko.observable(data.DistanceText);
        this.shared = ko.observable(data.ShareKey);
    }

    function SelectList(data) {
        this.text = ko.observable(data.Text);
        this.value = ko.observable(data.Value);
        this.selected = ko.observable(data.Selected);
    }

    function RoadsViewModel() {

        var self = this;

        self.dataFoot = ko.observableArray([]);
        self.dataBike = ko.observableArray([]);
        self.dataCar = ko.observableArray([]);

        self.yearsList = ko.observableArray([]);
        self.selectedYear = ko.observable();

        self.selectedYear.subscribe(function (newValue) {
            if (self.dataLoading() === true) {
                //console.log("data loading no need redirect");
                return;
            }

            $.post('/Home/ChangeCookiesRoads/', { selected: newValue }, function () {
                window.getPage(); //Запрос на сервер
                }, "json");
        });

        self.dataLoading = ko.observable();
        self.dataLoading(true);

        self.haveFoot = ko.observable();
        self.haveBike = ko.observable();
        self.haveCar = ko.observable();

        self.mainTabFoot = ko.observable();
        self.mainTabBike = ko.observable();
        self.mainTabCar = ko.observable();

        self.loadData = function(data) {

            var mappedFoot = $.map(data.DataFoot, function(item) { return new Road(item) });
            var mappedBike = $.map(data.DataBike, function(item) { return new Road(item) });
            var mappedCar = $.map(data.DataCar, function (item) { return new Road(item) });
            self.yearsList($.map(data.YearsList, function (item) { return new SelectList(item); }));

            //console.log("self.yearsList().length=", self.yearsList().length);
            for (var i = 0; i < self.yearsList().length; i += 1) {
                var dataYear = self.yearsList()[i];
                //console.log("selected=", dataYear.selected());
                if (dataYear.selected() === true) {
                    //console.log("selectedYear=", dataYear.value());
                    self.selectedYear(dataYear.value());
                }
            }

            self.dataFoot(mappedFoot);
            self.dataBike(mappedBike);
            self.dataCar(mappedCar);

            self.haveFoot(data.HaveFoot);
            self.haveBike(data.HaveBike);
            self.haveCar(data.HaveCar);

            self.mainTabFoot(false);
            self.mainTabBike(false);
            self.mainTabCar(false);

            if (self.haveFoot() === true) {
                self.mainTabFoot(true);
            } else {
                if (self.haveBike() === true) {
                    self.mainTabBike(true);
                } else {
                    if (self.haveCar() === true) {
                        self.mainTabCar(true);
                    } else {
                        self.mainTabFoot(true);
                    }
                }
            }

            self.dataLoading(false);
        };

        self.resetData = function() {
            self.dataFoot.removeAll();
            self.dataBike.removeAll();
            self.dataCar.removeAll();
        };

        self.setLoadingData = function() {
            self.dataLoading(true);
        };
    }

    var model;

    function showPage(data) {

        model.loadData(data);
    }


    (function($) {

        $(function() {

            model = new RoadsViewModel();
            ko.applyBindings(model, document.getElementById('divDataRoads'));

            window.getPage(); //Запрос на сервер

            var $shareGetInModalButton = $('#shareGetInModalButton');
            var $list = $('.tab-content,.panel-heading');
            var $addButton = $('#addButton');
            var $submitAddButton = $('#submitAddButton');
            var $modal = $('#ModalAddWindow');
            var $modalBody = $modal.find('.modal-body');
            var $saveButton = $('#saveButton');
            var $toEditor = $('#Map-Editor');
            var $buttonToEditor = $('#buttonToEditor');
            $buttonToEditor.show();
            var url = '';
            var data = {};

            $.post('/Home/GetMarkers/', data, function(markers) {

                initialGmap('@CultureInfoTool.GetCulture()', markers);

            }, "json");

            var $datetimepicker = $('#datetimepicker');
            $datetimepicker.datetimepicker({
                //viewMode: 'years',
                locale: '@CultureInfoTool.GetCulture()'
            });
            $datetimepicker.datetimepicker.defaults =
            {
                pickSeconds: true
            };

            function sendRequest(innerUrl, innerData, noRedirect) {
                $.ajax({
                    type: 'POST',
                    url: innerUrl,
                    data: innerData,
                    dataType: 'json',
                    success: function (response) {
                        if (response.error) {
                            alert(response.error);
                        } else {
                            $modal.modal('hide');
                            if (!noRedirect)
                                window.getPage(); //Запрос на сервер
                                //window.location.href = window.location.href;
                        }
                    },
                    error: function (err) {
                        alert(err);
                    }
                });

                return false;
            }

            var toEditorTextDefault = '/Home/TrackEditor';
            var toEditorText = toEditorTextDefault;

            $toEditor.off('click');
            $toEditor.on('click', function () {
                window.location.href = toEditorText;
                return false;
            });

            $addButton.off('click');
            $addButton.on('click', function () {
                $datetimepicker.val('@DateTime.Now');
                toEditorText = toEditorTextDefault;
                $shareGetInModalButton.hide();
                $modal.modal('show');
                return false;
            });

            $submitAddButton.off('click');
            $submitAddButton.on('click', function () {

                url = '/Home/AddTrack';
                data = {
                    name: $('#trackName').val(),
                    datetime: $('#datetimepicker').val(),
                    type: $('#type').val(),
                    coordinates: $('#trackCoords').val(),
                    distance: CalcDistanceFromTxt($('#trackCoords').val())
                };

                sendRequest(url, data);
                return false;
            });

            $list.off('click', '.btn-edit');
            $list.on('click', '.btn-edit', function () {
                $shareGetInModalButton.show();
                var $item = $(this);
                var id = $item.attr('id');
                toEditorText = toEditorTextDefault + "/" + id;
                var $trackName = $modalBody.find('.track-name');
                var $modalTitle = $modal.find('.modal-title');
                var $trackType = $modalBody.find('.track-type');
                var $trackCoords = $modalBody.find('.track-coords');
                var defaultModalType = $trackType.find('option:selected').text();
                var $trackDate = $modalBody.find('.track-date');


                var $loadingTrackNameBegin = $('#loadingtrackNameModal');
                var $loadingTrackNameEnd = $('#trackNameModal');

                var $loadingTrackDatesBegin = $('#loadingdatetimepickerModal');
                var $loadingTrackDateEnd = $('#datetimepickerModal');

                var $loadingTrackCoordinatesBegin = $('#loadingtrackCoordsModal');
                var $loadingTrackCoordinatesEnd = $('#trackCoordsModal');


                $loadingTrackNameBegin.show();
                $loadingTrackNameEnd.hide();

                $shareGetInModalButton.off('click');
                $shareGetInModalButton.on('click', function () {
                    window.modalShareWork(id);
                    $modal.modal('hide');
                    return false;
                });

                var data = { id: id };
                $.post('/Home/GetTrackNameById/', data, function (name) {

                    $trackName.val(name);

                    $loadingTrackNameBegin.hide();
                    $loadingTrackNameEnd.show();

                }, "json");

                $loadingTrackDatesBegin.show();
                $loadingTrackDateEnd.hide();
                $.post('/Home/GetTrackDateById/', data, function (date) {

                    $trackDate.val(date);

                    $loadingTrackDatesBegin.hide();
                    $loadingTrackDateEnd.show();

                }, "json");

                $loadingTrackCoordinatesBegin.show();
                $loadingTrackCoordinatesEnd.hide();
                $.post('/Home/GetTrackCoordinatesById/', data, function (coordinates) {

                    $trackCoords.val(coordinates);

                    $loadingTrackCoordinatesBegin.hide();
                    $loadingTrackCoordinatesEnd.show();

                }, "json");

                var typeinmenu = $item.parent().parent().parent().parent().attr('id');
                //console.log('type=', typeinmenu);
                if (typeinmenu === 'menu2') {
                    $trackType.find('option').filter(function (index) { return index === 2; }).prop('selected', true);
                }
                if (typeinmenu === 'menu3') {
                    $trackType.find('option').filter(function (index) { return index === 1; }).prop('selected', true);
                }

                //console.log("Edit click id=", id);

                var $deleteButton = $('#deleteButton');
                var defaultModalTitle = $modalTitle.text();
                $modalTitle.text('@Resource.Edit @Resource.Track');

                $modal.on('hidden.bs.modal', function () {
                    $modalTitle.text(defaultModalTitle);
                    $trackName.val('');
                    $trackCoords.val('');

                    $trackType.find('option')
                        .filter(function () {
                            return $(this).text() === defaultModalType;
                        })
                        .prop('selected', true);

                    $saveButton.hide();
                    $deleteButton.hide();
                    $submitAddButton.show();

                    return false;
                });

                $submitAddButton.hide();
                $saveButton.show();
                $deleteButton.show();
                $modal.modal('show');

                $deleteButton.off('click');
                $deleteButton.on('click', function () {

                    url = '/Home/DeleteTrack';
                    //console.log('delete track=', id);
                    data = { id: id };
                    //alert('Пока не делал, стремно терять, их сложно делать..');
                    sendRequest(url, data);

                    return false;
                });

                $saveButton.off('click');
                $saveButton.on('click', function () {
                    url = '/Home/EditTrack';
                    data = {
                        id: id,
                        name: $('#trackName').val(),
                        datetime: $('#datetimepicker').val(),
                        type: $('#type').val(),
                        coordinates: $('#trackCoords').val(),
                        distance: CalcDistanceFromTxt($('#trackCoords').val())
                    };

                    sendRequest(url, data);

                    return false;
                });


                return false;
            });

            $list.off('click', '.btn-share');
            $list.on('click', '.btn-share', function () {
                var $item = $(this);
                var id = $item.attr('id');
                window.modalShareWork(id);

                return false;
            });

            $list.off('click', '.track-id');
            $list.on('click', '.track-id', function () {
                var $item = $(this);
                var id = $item.attr('id');
                //console.log("track-id id=", id);

                if (id < 0) {
                    showTrackByType(id);
                } else {
                    showTrack(id, true);
                }

                return false;
            });
        });
    })(jQuery);
</script>
