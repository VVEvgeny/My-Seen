@using MySeenWeb.Models;
@using MySeenLib;

@model HomeViewModel

@Scripts.Render("~/bundles/jquery", "~/bundles/bootstrap")

@{
    ViewBag.Title = Resource.AppName;
}

<br />

@if (User.Identity.IsAuthenticated)
{
    var isSelectedFilm = Model.IsSelectedFilm;
    var isSelectedSerial = Model.IsSelectedSerial;

    <div class="form-inline">
        <div class="form-group">
            <label for="lstSelected" style="display: block;">@Resource.SelectTheCategory</label>
            @Html.DropDownListFor(model => model.Selected, Model.selectList, new { @class = "form-control", @id = "lstSelected", @style = "width: 200px;" })

            <button type="button" class="btn btn-primary" id="addButton">
                <span class="glyphicon glyphicon-plus"></span>
                &nbsp;@Resource.AddNew
            </button>
            &nbsp;
            <div class="form-group">
                <!--Переделать на поиск по БД--!>
                <!--<label for="quickSearch">@Resource.QuickSearch <span class="glyphicon glyphicon-search"></span> :</label>-->
                <!--<input type="text" class="form-control" id="quickSearch">-->
            </div>
        </div>
    </div>

    <br />
    <table class="table table-striped" id="table">
        @if (isSelectedFilm)
        {
            <thead>
                <tr>
                    <th class="col-sm-1"></th>
                    <th class="col-sm-7">@Resource.Name</th>
                    <th class="col-sm-2">@Resource.Date</th>
                    <th class="col-sm-1">@Resource.Genre</th>
                    <th class="col-sm-1">@Resource.Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (FilmsView elem in Model.Films)
                {
                    <tr>
                        <td class="align-center">
                            <button type="button" class="btn btn-info btn-edit btn-xs" id=@elem.Id>
                                <span class="glyphicon glyphicon-pencil"></span>
                                &nbsp;@Resource.Edit
                            </button>
                        </td>
                        <td class="align-left">@elem.Name</td>
                        <td class="align-center">@elem.DateSee</td>
                        <td class="align-center">@elem.GenreText</td>
                        <td class="align-center">@elem.RatingText</td>
                    </tr>
                }
            </tbody>
        }
        else if (isSelectedSerial)
        {
            <thead>
                <tr>
                    <th class="col-sm-1"></th>
                    <th class="col-sm-4">@Resource.Name</th>
                    <th class="col-sm-1">@Resource.LastEpisode</th>
                    <th class="col-sm-2">@Resource.DateLast</th>
                    <th class="col-sm-2">@Resource.DateBegin</th>
                    <th class="col-sm-1">@Resource.Genre</th>
                    <th class="col-sm-1">@Resource.Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (SerialsView elem in Model.Serials)
                {
                    <tr>
                        <td class="align-center">
                            <button type="button" class="btn btn-info btn-edit btn-xs" id=@elem.Id>
                                <span class="glyphicon glyphicon-pencil"></span>
                                &nbsp;@Resource.Edit
                            </button>
                        </td>
                        <td class="align-center">@elem.Name</td>
                        <td class="align-center">@elem.LastSeason-@elem.LastSeries</td>
                        <td class="align-center">@elem.DateLast</td>
                        <td class="align-center">@elem.DateBegin</td>
                        <td class="align-center">@elem.GenreText</td>
                        <td class="align-center">@elem.RatingText</td>
                    </tr>
                }
            </tbody>
        }
        else
        {
            <thead>
                <tr>
                    <th class="col-sm-1"></th>
                    <th class="col-sm-6">@Resource.Name</th>
                    <th class="col-sm-1">@Resource.Author</th>
                    <th class="col-sm-2">@Resource.DateRead</th>
                    <th class="col-sm-1">@Resource.Genre</th>
                    <th class="col-sm-1">@Resource.Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (BooksView elem in Model.Books)
                {
                    <tr>
                        <td class="align-center">
                            <button type="button" class="btn btn-info btn-edit btn-xs" id=@elem.Id>
                                <span class="glyphicon glyphicon-pencil"></span>
                                &nbsp;@Resource.Edit
                            </button>
                        </td>
                        <td class="align-center">@elem.Name</td>
                        <td class="align-center">@elem.Authors</td>
                        <td class="align-center">@elem.DateRead</td>
                        <td class="align-center">@elem.GenreText</td>
                        <td class="align-center">@elem.RatingText</td>
                    </tr>
                }
            </tbody>
        }
    </table>

    <div class="text-center">
            @Html.Partial("_Pagination", Model.Pages)
    </div>

    <div class="modal fade modal-window" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">
                        @Resource.AddNew
                        @if (isSelectedFilm)
                        {
                            <text>@Resource.Film</text>
                        }
                        else if (isSelectedSerial)
                        {
                            <text>@Resource.Serial</text>
                        }
                        else
                        {
                            <text>@Resource.Book</text>
                        }
                    </h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @if (isSelectedFilm)
                        {
                            <div class="form-group">
                                <label for="filmName" class="col-sm-2 control-label">@Resource.Name</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control movie-name" id="filmName" placeholder="@Resource.Name">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="filmGenre" class="col-sm-2 control-label">@Resource.Genre</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Genre, Model.genreList, new { @class = "form-control movie-genre", @id = "filmGenre" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="filmRating" class="col-sm-2 control-label">@Resource.Rating</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Rating, Model.ratingList, new { @class = "form-control movie-rating", @id = "filmRating" })
                                </div>
                            </div>
                        }
                        else if (isSelectedSerial)
                        {
                            <div class="form-group">
                                <label for="serialName" class="col-sm-2 control-label">@Resource.Name</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control movie-name" id="serialName" placeholder="@Resource.Name">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="serialSeason" class="col-sm-2 control-label">@Resource.Season</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="serialSeason" placeholder="@Resource.Season">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="serialSeries" class="col-sm-2 control-label">@Resource.Series</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="serialSeries" placeholder="@Resource.Series">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="serialGenre" class="col-sm-2 control-label">@Resource.Genre</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Genre, Model.genreList, new { @class = "form-control movie-genre", @id = "serialGenre" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="serialRating" class="col-sm-2 control-label">@Resource.Rating</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Rating, Model.ratingList, new { @class = "form-control movie-rating", @id = "serialRating" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <label for="bookName" class="col-sm-2 control-label">@Resource.Name</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control movie-name" id="bookName" placeholder="@Resource.Name">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="bookAuthor" class="col-sm-2 control-label">@Resource.Author</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="bookAuthor" placeholder="@Resource.Author">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="bookGenre" class="col-sm-2 control-label">@Resource.Genre</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Genre, Model.genreList, new { @class = "form-control movie-genre", @id = "bookGenre" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="bookRating" class="col-sm-2 control-label">@Resource.Rating</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Rating, Model.ratingList, new { @class = "form-control movie-rating", @id = "bookRating" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="deleteButton" style="display: none;">
                        <span class="glyphicon glyphicon-trash"></span>
                        &nbsp;@Resource.Delete
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <span class="glyphicon glyphicon-remove"></span>
                        &nbsp;@Resource.Close
                    </button>
                    <button type="button" class="btn btn-success" id="submitAddButton">
                        <span class="glyphicon glyphicon-ok"></span>
                        &nbsp;@Resource.Add
                    </button>
                    <button type="button" class="btn btn-success" id="saveButton" style="display: none;">
                        <span class="glyphicon glyphicon-ok"></span>
                        &nbsp;@Resource.SaveСhanges
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script language="javascript" type="text/javascript">
    (function ($) {
        $(function () {
            var $select = $('#lstSelected');
            var $addButton = $('#addButton');
            var $submitAddButton = $('#submitAddButton');
            var $table = $('.table.table-striped');
            var $modal = $('.modal-window');
            var $quickSearch = $('#quickSearch');
            var isSelectedFilm = '@Model.IsSelectedFilm' === 'True';
            var isSelectedSerial = '@Model.IsSelectedSerial' === 'True';
            var url = '';
            var data = {};

            function sendRequest(innerUrl, innerData) {
                $.ajax({
                    type: 'POST',
                    url: innerUrl,
                    data: innerData,
                    dataType: 'json',
                    success: function (response) {
                        if (response.error) {
                            alert(response.error);
                        }
                        else {
                            window.location.href = '/';
                            $modal.modal('hide');
                        }
                    },
                    error: function (err) {
                        alert(err);
                    }
                });

                return false;
            }

            $select.on('change', function () {
                var value = $(this).val();

                $.ajax({
                    type: 'POST',
                    url: '/Home/ChangeCookies',
                    data: {
                        selected: value
                    },
                    dataType: 'json',
                    success: function () {
                        window.location.href = '/';
                    },
                    error: function () {
                        alert('Error');
                    }
                });

                return false;
            });

            $addButton.off('click');
            $addButton.on('click', function () {
                $modal.modal('show');

                return false;
            });

            $submitAddButton.off('click');
            $submitAddButton.on('click', function () {
                if (isSelectedFilm) {
                    url = '/Home/AddFilm';
                    data = {
                        name: $('#filmName').val(),
                        genre: $('#filmGenre').val(),
                        rating: $('#filmRating').val()
                    };
                }
                else if (isSelectedSerial) {
                    url = '/Home/AddSerial';
                    data = {
                        name: $('#serialName').val(),
                        season: $('#serialSeason').val(),
                        series: $('#serialSeries').val(),
                        genre: $('#serialGenre').val(),
                        rating: $('#serialRating').val()
                    };
                }
                else {
                    url = '/Home/AddBook';
                    data = {
                        name: $('#bookName').val(),
                        authors: $('#bookAuthor').val(),
                        genre: $('#bookGenre').val(),
                        rating: $('#bookRating').val()
                    };
                }

                sendRequest(url, data);

                return false;
            });

            $table.off('click', '.btn-edit');
            $table.on('click', '.btn-edit', function () {
                var $button = $(this);
                var $tr = $button.parent().parent();
                var $tds = $tr.find('td');
                var $modalTitle = $modal.find('.modal-title');
                var $modalBody = $modal.find('.modal-body');
                var $movieName = $modalBody.find('.movie-name');
                var $movieGenre = $modalBody.find('.movie-genre');
                var $movieRating = $modalBody.find('.movie-rating');
                var $serialSeason = $('#serialSeason') || $('<input id="serialSeason" value="" />');
                var $serialSeries = $('#serialSeries') || $('<input id="serialSeries" value="" />');
                var $bookAuthors = $('#bookAuthor');
                var $saveButton = $('#saveButton');
                var $deleteButton = $('#deleteButton');
                var defaultModalTitle = $modalTitle.text();
                var defaultModalGenre = $movieGenre.find('option:selected').text();
                var defaultModalRating = $movieRating.find('option:selected').text();
                var id = $button.attr('id');
                var name = $tds.eq(1).text();
                var authors = $tds.eq(2).text();
                var genre = $tds.eq(-2).text();
                var rating = $tds.eq(-1).text();

                $movieName.val(name);
                $bookAuthors.val(authors);

                $movieGenre.find('option')
                    .filter(function (index) {
                        return $(this).text() === genre;
                    })
                    .prop('selected', true);
                $movieRating.find('option')
                    .filter(function (index) {
                        return $(this).text() === rating;
                    })
                    .prop('selected', true);

                if (isSelectedFilm) {
                    $modalTitle.text('@Resource.Edit @Resource.Film');
                }
                else if (isSelectedSerial) {
                    var lastEp = $tds.eq(2).text();
                    var lastEpSeparated = lastEp.split('-');
                    var season = 0;
                    var series = 0;

                    if (lastEpSeparated.length > 1) {
                        season = lastEpSeparated[0];
                        series = lastEpSeparated[1];
                    }

                    $modalTitle.text('@Resource.Edit @Resource.Serial');
                        $serialSeason.val(season);
                        $serialSeries.val(series);
                    }
                    else
                    {
                        $modalTitle.text('@Resource.Edit @Resource.Book');
                    }

                $submitAddButton.hide();
                $saveButton.show();
                $deleteButton.show();
                $modal.modal('show');

                $modal.on('hidden.bs.modal', function (e) {
                    $modalTitle.text(defaultModalTitle);
                    $movieName.val('');
                    $serialSeason.val('');
                    $serialSeries.val('');
                    $bookAuthors.val('');
                    $movieGenre.find('option')
                        .filter(function (index) {
                            return $(this).text() === defaultModalGenre;
                        })
                        .prop('selected', true);
                    $movieRating.find('option')
                        .filter(function (index) {
                            return $(this).text() === defaultModalRating;
                        })
                        .prop('selected', true);
                    $saveButton.hide();
                    $deleteButton.hide();
                    $submitAddButton.show();

                    return false;
                });

                $saveButton.off('click');
                $saveButton.on('click', function ()
                {
                    if (isSelectedFilm) {
                        url = '/Home/EditFilm';
                        data = {
                            id: id,
                            name: $('#filmName').val(),
                            genre: $('#filmGenre').val(),
                            rating: $('#filmRating').val()
                        };
                    } else if (isSelectedSerial) {
                        url = '/Home/EditSerial';
                        data = {
                            id: id,
                            name: $('#serialName').val(),
                            season: $('#serialSeason').val(),
                            series: $('#serialSeries').val(),
                            genre: $('#serialGenre').val(),
                            rating: $('#serialRating').val()
                        };
                    }
                    else  {
                        url = '/Home/EditBook';
                        data = {
                            id: id,
                            name: $('#bookName').val(),
                            authors: $('#bookAuthor').val(),
                            genre: $('#bookGenre').val(),
                            rating: $('#bookRating').val()
                        };
                    }

                    sendRequest(url, data);

                    return false;
                });

                $deleteButton.off('click');
                $deleteButton.on('click', function () {
                    if (isSelectedFilm) {
                        url = '/Home/DeleteFilm';
                        data = {
                            id: id
                        };
                    } else if (isSelectedSerial) {
                        url = '/Home/DeleteSerial';
                        data = {
                            id: id
                        };
                    }
                    else {
                        url = '/Home/DeleteBook';
                        data = {
                            id: id
                        };
                    }

                    sendRequest(url, data);

                    return false;
                });

                return false;
            });

            $quickSearch.on('input', function () {
                var value = $(this).val().toLowerCase();

                var $rows = $table.find('tbody tr');

                $rows.each(function (index, element) {
                    var $row = $(element);

                    var $tds = $row.find('td');

                    if (value !== '' && $tds.eq(1).text().toLowerCase().indexOf(value) < 0) {
                        $row.hide();
                    } else {
                        $row.show();
                    }
                });

                return false;
            });

            var $thead = $table.find('thead');
            var $ths = $thead.find('tr th');

            var offsetTop = $thead.offset().top;
            var thWidths = [];

            $ths.each(function (index, element) {
                var $th = $(element);

                thWidths.push($th.width());
            });

            $(window).off('scroll');
            $(window).on('scroll', function () {
                var scrollTop = $(window).scrollTop() + 50;

                if (scrollTop >= offsetTop) {
                    $thead.css({ 'position': 'fixed', 'top': '50px' });

                    var $firstTr = $table.find('tbody tr:first');
                    var $tds = $firstTr.find('td');

                    $ths.each(function (index, element) {
                        var $th = $(element);

                        $th.width(thWidths[index]);
                        $tds.eq(index).width(thWidths[index]);
                    });
                } else {
                    $thead.css({ 'position': 'relative', 'top': 'auto' });
                }

                return false;
            });
        });
    })(jQuery);
    </script>
}
